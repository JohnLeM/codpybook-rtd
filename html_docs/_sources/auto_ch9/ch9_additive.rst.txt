
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_ch9\ch9_additive.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_ch9_ch9_additive.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_ch9_ch9_additive.py:


====================================
9.06 Additive noise map
====================================
We reproduce here the figure 9.6 of the book.
Utilitary functions can be found next to this file. Here, we only define codpy-related functions.

.. GENERATED FROM PYTHON SOURCE LINES 10-12

Necessary Imports
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 12-34

.. code-block:: Python

    import os
    import sys

    import matplotlib.pyplot as plt
    import numpy as np

    from codpy.kernel import Sampler

    try:
        CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
    except NameError:
        CURRENT_DIR = os.getcwd()
    data_path = os.path.join(CURRENT_DIR, "data")
    PARENT_DIR = os.path.abspath(os.path.join(CURRENT_DIR, ".."))
    sys.path.insert(0, PARENT_DIR)

    import utils.ch9.mapping as maps
    from utils.ch9.data_utils import stats_df
    from utils.ch9.market_data import retrieve_market_data
    from utils.ch9.path_generation import generate_paths
    from utils.ch9.plot_utils import display_historical_vs_generated_distribution








.. GENERATED FROM PYTHON SOURCE LINES 35-37

Parameter definition
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 37-53

.. code-block:: Python



    def get_cdpres_param():
        return {
            "rescale_kernel": {"max": 2000, "seed": None},
            "rescale": True,
            "grid_projection": True,
            "reproductibility": False,
            "date_format": "%d/%m/%Y",
            "begin_date": "01/06/2020",
            "end_date": "01/06/2022",
            "today_date": "01/06/2022",
            "symbols": ["AAPL", "GOOGL", "AMZN"],
        }









.. GENERATED FROM PYTHON SOURCE LINES 54-56

Get the market data
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    params = retrieve_market_data()








.. GENERATED FROM PYTHON SOURCE LINES 59-65

Defining the map
------------------------
The additive noise map is defined as:
$$\eta_Y(\varepsilon) = \varepsilon - f(Y), \qquad \varepsilon = \eta_Y^{-1}(\eta) = \eta + f(Y),$$
Where, $\eta_Y$ is a white noise, that is an independent random variable, and
$f : \mathbb{R}^{D_Y} \to \mathbb{R}^{D_{\varepsilon}}$ is a smooth function modeling the dependence of $\varepsilon$ on $Y$. If unknown, $f$ can be estimated from historical data using the denoising algorithm

.. GENERATED FROM PYTHON SOURCE LINES 65-71

.. code-block:: Python


    params["map"] = maps.composition_map(
        [maps.additive_noise_map(), maps.log_map, maps.remove_time()]
    )
    params = maps.apply_map(params)








.. GENERATED FROM PYTHON SOURCE LINES 72-76

We define our sampler on the mapped data using codpy's Sampler
------------------------------------------------------------------------
You can define your own latent generator function, here we use a simple uniform distribution.
But if not provided, a default one will be used by the Sampler class.

.. GENERATED FROM PYTHON SOURCE LINES 76-81

.. code-block:: Python

    mapped_data = params["transform_h"].values
    generator = lambda n: np.random.uniform(size=(n, mapped_data.shape[1]))
    sampler = Sampler(mapped_data, latent_generator=generator)
    params["sampler"] = sampler








.. GENERATED FROM PYTHON SOURCE LINES 82-84

We plot the original distribution vs the generated one
------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 84-88

.. code-block:: Python

    params = display_historical_vs_generated_distribution(params)
    params["graphic"](params)
    plt.show()




.. image-sg:: /auto_ch9/images/sphx_glr_ch9_additive_001.png
   :alt: ch9 additive
   :srcset: /auto_ch9/images/sphx_glr_ch9_additive_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 89-93

Reproductibility test
------------------------------------------------
We regenerate the same path by generating from the latent representation
We make sure we get the original data back.

.. GENERATED FROM PYTHON SOURCE LINES 93-98

.. code-block:: Python

    params["reproductibility"] = True
    params = generate_paths(params)
    params["graphic"](params)
    plt.show()




.. image-sg:: /auto_ch9/images/sphx_glr_ch9_additive_002.png
   :alt: ch9 additive
   :srcset: /auto_ch9/images/sphx_glr_ch9_additive_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 99-101

We now generate a new set of 10 paths
------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 101-109

.. code-block:: Python

    params["reproductibility"] = False
    params["Nz"] = 100
    params = generate_paths(params)
    params["graphic"](params)
    plt.show()

    stats = stats_df(params["transform_h"], params["transform_g"]).T
    print(stats)



.. image-sg:: /auto_ch9/images/sphx_glr_ch9_additive_003.png
   :alt: ch9 additive
   :srcset: /auto_ch9/images/sphx_glr_ch9_additive_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

                             0                 1                 2
    Mean      -2.4e-06(0.0011)  -4.8e-06(0.0009)  1.3e-06(0.00052)
    Variance       0.19(0.039)      -0.36(-0.19)       -0.1(-0.16)
    Skewness    0.0003(0.0003)  0.00034(0.00033)  0.00025(0.00023)
    Kurtosis         2.1(0.62)         3.4(0.72)        1.3(0.058)
    KS test         0.11(0.05)        0.36(0.05)        0.58(0.05)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.208 seconds)


.. _sphx_glr_download_auto_ch9_ch9_additive.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ch9_additive.ipynb <ch9_additive.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ch9_additive.py <ch9_additive.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: ch9_additive.zip <ch9_additive.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
