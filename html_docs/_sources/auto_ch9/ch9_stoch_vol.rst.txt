
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_ch9\ch9_stoch_vol.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_ch9_ch9_stoch_vol.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_ch9_ch9_stoch_vol.py:


====================================================================================================
9.08 Stochastic volatility model
====================================================================================================
We reproduce here the figure 9.9 of the book.
Utilitary functions can be found next to this file. Here, we only define codpy-related functions.

.. GENERATED FROM PYTHON SOURCE LINES 10-12

Necessary Imports
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 12-33

.. code-block:: Python

    import os
    import sys

    import matplotlib.pyplot as plt
    import numpy as np

    from codpy.kernel import Sampler

    try:
        CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
    except NameError:
        CURRENT_DIR = os.getcwd()
    data_path = os.path.join(CURRENT_DIR, "data")
    PARENT_DIR = os.path.abspath(os.path.join(CURRENT_DIR, ".."))
    sys.path.insert(0, PARENT_DIR)

    import utils.ch9.mapping as maps
    from utils.ch9.market_data import retrieve_market_data
    from utils.ch9.path_generation import generate_paths
    from utils.ch9.plot_utils import display_historical_vs_generated_distribution








.. GENERATED FROM PYTHON SOURCE LINES 34-36

Parameter definition
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 36-51

.. code-block:: Python


    def get_cdpres_param():
        return {
            "rescale_kernel": {"max": 2000, "seed": None},
            "rescale": True,
            "grid_projection": True,
            "reproductibility": False,
            "date_format": "%d/%m/%Y",
            "begin_date": "01/06/2020",
            "end_date": "01/06/2022",
            "today_date": "01/06/2022",
            "symbols": ["AAPL", "GOOGL", "AMZN"],
        }









.. GENERATED FROM PYTHON SOURCE LINES 52-54

Get the market data
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: Python

    params = retrieve_market_data()








.. GENERATED FROM PYTHON SOURCE LINES 57-65

Defining the map
------------------------
This model augments the conditioning model by adding a stochastic volatility term : 
$$\begin{split}
\ln X^{k+1} &= \ln X^k + \varepsilon_X^k \mid \sigma^k, \\
\sigma^{k+1} &= \sigma^k + \varepsilon_\sigma^k \mid \sigma^k,
\end{split}$$
where $\varepsilon^k = (\varepsilon_X^k, \varepsilon_\sigma^k)$ are the noise components for the process and volatility, respectively. These are sampled using conditional generators $G_k^X(\cdot \mid \sigma^k)$ and $G_k^\sigma(\cdot \mid \sigma^k)$.

.. GENERATED FROM PYTHON SOURCE LINES 65-76

.. code-block:: Python


    params["map"] = maps.composition_map(
        (
            maps.VarConditioner_map(params),
            maps.add_variance_map(var_q=10),
            maps.log_map,
            maps.remove_time(),
        )
    )
    params = maps.apply_map(params)








.. GENERATED FROM PYTHON SOURCE LINES 77-81

We define our sampler on the mapped data using codpy's Sampler
------------------------------------------------------------------------
You can define your own latent generator function, here we use a simple uniform distribution.
But if not provided, a default one will be used by the Sampler class.

.. GENERATED FROM PYTHON SOURCE LINES 81-86

.. code-block:: Python

    mapped_data = params["transform_h"].values
    generator = lambda n: np.random.uniform(size=(n, mapped_data.shape[1]))
    sampler = Sampler(mapped_data, latent_generator=generator)
    params["sampler"] = sampler








.. GENERATED FROM PYTHON SOURCE LINES 87-89

We plot the original distribution vs the generated one
------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 89-93

.. code-block:: Python

    params = display_historical_vs_generated_distribution(params)
    params["graphic"](params)
    plt.show()




.. image-sg:: /auto_ch9/images/sphx_glr_ch9_stoch_vol_001.png
   :alt: ch9 stoch vol
   :srcset: /auto_ch9/images/sphx_glr_ch9_stoch_vol_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 94-98

Reproductibility test
------------------------------------------------
We regenerate the same path by generating from the latent representation
We make sure we get the original data back.

.. GENERATED FROM PYTHON SOURCE LINES 98-103

.. code-block:: Python

    params["reproductibility"] = True
    params = generate_paths(params)
    params["graphic"](params)
    plt.show()




.. image-sg:: /auto_ch9/images/sphx_glr_ch9_stoch_vol_002.png
   :alt: ch9 stoch vol
   :srcset: /auto_ch9/images/sphx_glr_ch9_stoch_vol_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 104-106

We now generate a new set of 10 paths
------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 106-112

.. code-block:: Python

    params["reproductibility"] = False
    params["Nz"] = 10
    params = generate_paths(params)
    params["graphic"](params)
    plt.show()
    pass



.. image-sg:: /auto_ch9/images/sphx_glr_ch9_stoch_vol_003.png
   :alt: ch9 stoch vol
   :srcset: /auto_ch9/images/sphx_glr_ch9_stoch_vol_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.266 seconds)


.. _sphx_glr_download_auto_ch9_ch9_stoch_vol.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: ch9_stoch_vol.ipynb <ch9_stoch_vol.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: ch9_stoch_vol.py <ch9_stoch_vol.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: ch9_stoch_vol.zip <ch9_stoch_vol.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
